//- index.pug
doctype html
html(lang="en")
  head
    meta(charset='utf-8')
    title Wendy
    meta(name='description', content='Enabling the creation of a web of trust')
    meta(name='author', content='charlyoleg')
    meta(name='viewport', content='width=device-width, initial-scale=1.0')
    link(rel='stylesheet', href='css/wendy_style.css?v=1.0')
    link(rel='manifest', href='/manifest.json')
    link(rel='icon', type='image/svg+xml', href='wendy_favicon.svg')
    link(rel='icon', type='image/png', sizes="64x64", href='wendy_favicon_64x64.png')
    link(rel='icon', type='image/png', sizes="256x256", href='wendy_favicon_256x256.png')
  body
    .entrance
      h1 Welcome to Wendy's world
      button.button_enter(type='button') Create a profile
      button.button_enter(type='button') Load a profile
    .entropy
      button.button_entropy(type='button') Select a file
    .profile
      h1 This is your profile

      h2 Wendy server (communication server)
      input#server_url(type='text', value='https://localhost:9631')
      button#action_test_server.button_enter(type='button') Update and test the server
      span#server_status Undefined

      h2 Quantum communication
      h3 Push a quantum-message
      textarea#quantum_msg_push(rows='5', cols='100', maxlength=460)
      br
      button#action_quantum_push.button_enter(type='button') Push the message
      span#quantum_msg_id_push Undefined
      span#quantum_push_status Undefined
      h3 Pull a quantum-message
      input#quantum_msg_id_pull(type='text', value='abcde-10')
      button#action_quantum_pull.button_enter(type='button') Pull the message
      span#quantum_msg_pull_status Undefined
      br
      textarea#quantum_msg_pull(rows='5', cols='100', readonly=true)

    footer#apropos
      h1 Apropos

      .footer_links
        h2 Around Wendy
        ol(type=1)
          li
            a(href='https://github.com/charlyoleg/wendy') github
          li
            a(href='https://wendy.readthedocs.io/en/latest/') docs
          li
            a(href='https://app.netlify.com/sites/infallible-brahmagupta-743a4c/deploys') continuous-integration
          li
            a(href='https://infallible-brahmagupta-743a4c.netlify.com/') the Netlify instance
          li
            a(href='https://readthedocs.org/projects/wendy/') docs status

      .wendy_fingerprint
        h2 Wendy's fingerprint
        p= 'PWA Wendy Version: ' + fingerprint.version
        p= 'build on: ' + fingerprint.build_date
        p Source code information:
        p= 'git repo: ' + fingerprint.git_repo_name
        p= 'git branch: ' + fingerprint.git_branch_name
        p= 'git commit hash: ' + fingerprint.git_commit_hash
        p= 'git commit author: ' + fingerprint.git_commit_author
        p= 'git commit date: ' + fingerprint.git_commit_date
        p= 'git commit message: ' + fingerprint.git_commit_message

      .pwa_installation
        h2 PWA Wendy Installation
        .action_bar
          .one_button
            button#pwa_uninstall.action_button_reset(type='button', disabled=true) Uninstall Wendy
          .one_status
            span#pwa_install_status.action_status The PWA Wendy is not installed on this device
          .one_button
            button#pwa_install.action_button_submit(type='button', disabled=true) Install Wendy


    // The core logic
    script(type='module', src='js/wendy_app.js?v=1.0')
    // The service-worker
    if fingerprint.with_service_worker
      script.
        if ('serviceWorker' in navigator) {
          navigator.serviceWorker.register('./wendy_service_worker.js')
           .then(registration => console.log('wendy service worker installed with scope: ', registration.scope))
           .catch(err => console.error('Error by installing the wendy service worker: ', err));
        } else {
          console.warn('Service Worker not supported in this browser');
        }
